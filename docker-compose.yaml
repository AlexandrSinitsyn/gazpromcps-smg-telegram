version: '3.7'

services:
    backend:
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "8080:8080"
        environment:
            POSTGRES_DB: 'db'
            POSTGRES_USER: 'admin'
            POSTGRES_PASSWORD: 'admin123'
        volumes:
            - ./logs:/logs
        networks:
            - internal
        depends_on:
            - postgres

    postgres:
        image: postgres:15
        ports:
            - "5432:5432"
        restart: always
        environment:
            POSTGRES_DB: 'db'
            POSTGRES_USER: 'admin'
            POSTGRES_PASSWORD: 'admin123'
        networks:
            - internal
        working_dir: /postgres-data
        volumes:
            - postgres-data:/var/lib/postgresql/data

    loki:
        image: grafana/loki:2.4.0
        volumes:
            - loki-data:/etc/loki
            - ./logs/loki-config.yaml:/etc/loki/loki-config.yml
        ports:
            - "3100:3100"
        restart: unless-stopped
        command: -config.file=/etc/loki/loki-config.yml
        networks:
            - loki
        depends_on:
            - backend

    promtail:
        image: grafana/promtail:2.4.0
        volumes:
            - ./logs:/var/log
            - promtail-data:/etc/promtail
            - ./logs/promtail-config.yaml:/etc/promtail/promtail-config.yml
        restart: unless-stopped
        command: -config.file=/etc/promtail/promtail-config.yml
        networks:
            - loki
        depends_on:
            - backend

    grafana:
        image: grafana/grafana:8.0.0
        volumes:
            - grafana-data:/var/lib/grafana
        ports:
            - "3000:3000"
        restart: unless-stopped
        networks:
            - loki
        depends_on:
            - loki

volumes:
    postgres-data:
    loki-data:
    promtail-data:
    grafana-data:

networks:
    internal:
        driver: bridge
    loki:
        driver: bridge
